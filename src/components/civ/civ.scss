@use './civ-animations';
@use '../../shared-styles/lib/alignment';
@use '../../shared-styles/lib/animation';
@use '../../shared-styles/lib/border';
@use '../../shared-styles/lib/box-shadow';
@use '../../shared-styles/lib/breakpoint';
@use '../../shared-styles/lib/color';
@use '../../shared-styles/lib/font';
@use '../../shared-styles/lib/grid-item-name';
@use '../../shared-styles/lib/spacing';

$civ-unit-image-size-mobile: 48px;
$civ-unit-image-size-large: 72px;

.civ-container {
  display: grid;

  @include alignment.grid-alignment-center;

  width: 100%;
  height: 100%;

  margin-top: spacing.calc-vertical-margin(spacing.$vertical-margin-medium);

  &.drafted-container {
    margin-top: 0;
  }
}

.civ-main-content {
  @include box-shadow.box-shadow($isInteractive: false);
  position: relative;

  background-color: color.$black;
  border-radius: border.$border-radius-medium;
  border: border.$border-thickness-tiny solid border.$border-neutral-color;

  @include animation.do-transition(
    civ-animations.$transition-props,
    animation.$animation-duration-small,
    animation.$timing-fn-default
  );

  @include breakpoint.for-phone-only {
    width: $civ-unit-image-size-mobile;
    height: $civ-unit-image-size-mobile;
  }

  @include breakpoint.for-tablet-portrait-up {
    width: $civ-unit-image-size-large;
    height: $civ-unit-image-size-large;
  }

  &.drafted {
    margin-top: spacing.calc-vertical-margin(spacing.$vertical-margin-medium);
    margin-bottom: spacing.calc-vertical-margin(
      spacing.$vertical-margin-medium
    );
    transform: scale(1.3);

    @include breakpoint.for-phone-only {
      transform: scale(2);
    }

    &.highlight-drafted {
      @include animation.do-animation(
        highlight-drafted-civ,
        animation.$animation-duration-large,
        animation.$timing-fn-enter
      );

      @include breakpoint.for-phone-only {
        @include animation.do-animation(
          highlight-drafted-civ-mobile,
          animation.$animation-duration-large,
          animation.$timing-fn-enter
        );
      }
    }
  }

  &.poolable {
    $civ-bg-color-primary-30: rgba(color.$primary-color-red-light, 0.3);
    $civ-bg-color-primary-50: rgba(color.$primary-color-red-light, 0.5);
    $civ-bg-color-base: color.$black;

    &.draftable {
      @include box-shadow.box-shadow;

      &:hover {
        cursor: pointer;
        background: linear-gradient(
          $civ-bg-color-base,
          $civ-bg-color-primary-30
        );
        transform: scale(1.1);
      }

      &.in-pool:hover {
        background-color: $civ-bg-color-base;
      }
    }

    &.in-pool {
      border: border.$border-thickness-medium solid color.$primary-color-amber;
      background: linear-gradient($civ-bg-color-base, $civ-bg-color-primary-50);
      box-shadow:
        0px 0px box-shadow.$box-shadow-hover 0 box-shadow.$shadow-color,
        0 0 box-shadow.$box-shadow-small color.$primary-color-amber;
      transform: scale(1.1);
    }
  }
}

.civ-emblem {
  display: inline-block;

  position: absolute;
  top: 5px;
  right: 5px;
  width: 20px;
  height: 20px;

  font-size: font.calc-font-size(font.$font-size-0);

  @include breakpoint.for-phone-only {
    width: 10px;
    height: 10px;
  }
}

.civ-unit-image,
.civ-name,
.civ-emblem {
  pointer-events: none;
  touch-action: none;
}

.civ-unit-image {
  text-align: center;

  @include breakpoint.for-phone-only {
    width: $civ-unit-image-size-mobile;
    height: $civ-unit-image-size-mobile;
  }

  @include breakpoint.for-tablet-portrait-up {
    width: $civ-unit-image-size-large;
    height: $civ-unit-image-size-large;
  }
}

.civ-name {
  font-size: font.calc-font-size(font.$font-size-2);

  @include grid-item-name.grid-item-name;

  @include breakpoint.for-1080p-up {
    font-size: font.calc-font-size(font.$font-size-3);
  }
}
